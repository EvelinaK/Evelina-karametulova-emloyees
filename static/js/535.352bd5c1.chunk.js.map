{"version":3,"file":"static/js/535.352bd5c1.chunk.js","mappings":"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","sources":["helpers/importFile.js","helpers/downloadCSV.jsx","components/Table/index.jsx","components/ResultTable/index.jsx","components/ResultTable/styles.js","pages/homePage.jsx","pages/styles.js"],"sourcesContent":["import { parse } from 'papaparse'\r\nimport { differenceInCalendarDays, dateFns, format, min } from 'date-fns'\r\n\r\n// To accept CSV (.csv), Excel Files 97-2003 (.xls), Excel Files 2007+ (.xlsx) files\r\nexport const ACCEPT_CSV =\r\n  '.csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel'\r\nexport const ACCEPT_CSV_ONLY = '.csv'\r\n\r\nexport const excelOnly =\r\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel'\r\n\r\nexport const readFile = file =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.readAsText(file)\r\n    reader.onload = () => resolve(reader.result)\r\n    reader.onerror = error => reject(error)\r\n  })\r\n\r\nfunction updateProjectMaxDifference(project, dateFrom, dateTo, emp1, emp2) {\r\n  let dif = differenceInCalendarDays(dateTo, dateFrom)\r\n\r\n  if (!project.MaxDifference || project.MaxDifference < dif) {\r\n    project.MaxDifference = dif\r\n    project.Emp1 = emp1\r\n    project.Emp2 = emp2\r\n  }\r\n}\r\n\r\nconst getProjectInfo = arr => {\r\n  const result = {\r\n    ProjectID: arr[0].ProjectID\r\n  }\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (\r\n      differenceInCalendarDays(arr[i].DateTo, arr[i].DateFrom) <\r\n      result.MaxDifference\r\n    ) {\r\n      continue\r\n    }\r\n\r\n    for (let j = i + 1; j < arr.length; j++) {\r\n      if (\r\n        differenceInCalendarDays(arr[j].DateTo, arr[j].DateFrom) <\r\n        result.MaxDifference\r\n      ) {\r\n        arr.splice(j, 1)\r\n        continue\r\n      }\r\n\r\n      if (arr[i].DateFrom >= arr[j].DateFrom) {\r\n        if (arr[i].DateFrom <= arr[j].DateTo) {\r\n          updateProjectMaxDifference(\r\n            result,\r\n            arr[i].DateFrom,\r\n            min([arr[i].DateTo, arr[j].DateTo]),\r\n            arr[i].EmpID,\r\n            arr[j].EmpID\r\n          )\r\n        }\r\n      } else {\r\n        if (arr[j].DateFrom <= arr[i].DateTo) {\r\n          updateProjectMaxDifference(\r\n            result,\r\n            arr[j].DateFrom,\r\n            min([arr[i].DateTo, arr[j].DateTo]),\r\n            arr[i].EmpID,\r\n            arr[j].EmpID\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst importFile = ({ target }, callback) => {\r\n  readFile(target.files[0]).then(res => {\r\n    let tableData = []\r\n    let info = ''\r\n    try {\r\n      let result = parse(res, { header: true, skipEmptyLines: true })\r\n      const result1 = result.data.reduce((acc, item) => {\r\n        var proj = item.ProjectID\r\n        const dateTo =\r\n          item.DateTo === 'NULL' ? new Date() : new Date(item.DateTo)\r\n\r\n        const dateFrom = new Date(item.dateFrom)\r\n\r\n        if (acc[proj]) {\r\n          acc[proj].push({ ...item, DateFrom: dateFrom, DateTo: dateTo })\r\n        } else {\r\n          acc[proj] = [{ ...item, DateFrom: dateFrom, DateTo: dateTo }]\r\n        }\r\n        return acc\r\n      }, {})\r\n\r\n      let projectList = []\r\n      Object.values(result1).forEach(projectScope =>\r\n        projectList.push(getProjectInfo(projectScope))\r\n      )\r\n\r\n      if (projectList.length < 2) {\r\n        throw new Error('Error in CSV file')\r\n      } else {\r\n        tableData = projectList\r\n      }\r\n    } catch (error) {\r\n      info =\r\n        'Something went wrong. Please choose another file or use a template csv.'\r\n      return callback({\r\n        payload: tableData,\r\n        info: info\r\n      })\r\n    }\r\n    callback({\r\n      payload: tableData,\r\n      info: info\r\n    })\r\n  })\r\n}\r\n\r\nexport default importFile\r\n","const EmpID = 'EmpID'\r\nconst ProjectID = 'ProjectID'\r\nconst DateFrom = 'DateFrom'\r\nconst DateTo = 'DateTo'\r\n\r\nconst downloadCSVFile = (data, fileName = 'contacts.csv') => {\r\n  const BOM = '\\uFEFF'\r\n  const templateArray = [`${EmpID};${ProjectID};${DateFrom};${DateTo}`]\r\n  const emloyeeArray = data.map(\r\n    item => `${item.EmpID};${item.ProjectID};${item.DateFrom};${item.DateTo}`\r\n  )\r\n  const stringsArray = templateArray.concat(emloyeeArray)\r\n  const csvContent = BOM + stringsArray.join(',').replace(/,/g, '\\n')\r\n  const pom = document.createElement('a')\r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })\r\n  const url = URL.createObjectURL(blob)\r\n  pom.href = url\r\n  pom.setAttribute('download', fileName)\r\n  pom.click()\r\n}\r\n\r\nexport default downloadCSVFile\r\n","import MuiPaper from '@material-ui/core/Paper'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport MaterialTable from 'material-table'\r\nimport Pagination from '../PaginationComponent/index'\r\n\r\nconst Paper = withStyles({\r\n  root: {\r\n    margin: '0 0 30px',\r\n    background: 'transparent',\r\n    boxShadow: 'none'\r\n  }\r\n})(MuiPaper)\r\n\r\nconst defaultOptions = {\r\n  search: false,\r\n  actionsColumnIndex: -1,\r\n  toolbar: false,\r\n  draggable: false,\r\n  emptyRowsWhenPaging: false,\r\n  selectionProps: {\r\n    color: 'primary'\r\n  },\r\n  headerSelectionProps: {\r\n    color: 'primary'\r\n  },\r\n  pageSize: 6,\r\n  pageSizeOptions: [6, 25, 50],\r\n  actionsCellStyle: {\r\n    color: '#828282',\r\n    fontSize: '1.4rem'\r\n  },\r\n  sorting: true\r\n}\r\n\r\nconst Table = ({\r\n  className,\r\n  options,\r\n  withShadow = true,\r\n  components,\r\n  emptyTableText,\r\n  ...props\r\n}) => {\r\n  const allOptions = options\r\n    ? { ...defaultOptions, ...options }\r\n    : defaultOptions\r\n\r\n  const cn = clsx(className)\r\n  const alignedColumns = props.columns\r\n\r\n  return (\r\n    <div className={cn}>\r\n      <MaterialTable\r\n        localization={{\r\n          body: {\r\n            emptyDataSourceMessage: emptyTableText\r\n              ? emptyTableText\r\n              : 'No records to display'\r\n          }\r\n        }}\r\n        {...props}\r\n        columns={alignedColumns}\r\n        options={allOptions}\r\n        components={{\r\n          ...components,\r\n          Container: ({ children, ...props }) => {\r\n            const childrenFiltered = children.filter((el, i) => i !== 4)\r\n            return (\r\n              <>\r\n                <Paper\r\n                  className=\"main-table\"\r\n                  {...props}\r\n                  children={childrenFiltered}\r\n                  elevation={withShadow ? 2 : 0}\r\n                />\r\n                {children[4]}\r\n              </>\r\n            )\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nTable.defaultProps = {\r\n  hover: true,\r\n  sorting: false\r\n}\r\n\r\nexport default Table\r\n","import { createRef, useState, useEffect, useMemo } from 'react'\r\nimport Table from '../Table'\r\nimport { validationStyles } from './styles'\r\n\r\nconst tableOptions = {\r\n  paging: true,\r\n  sorting: false\r\n}\r\n\r\nconst Result = ({ values }) => {\r\n  const classes = validationStyles()\r\n  const tableRef = createRef(null)\r\n  const columns = [\r\n    {\r\n      width: 30,\r\n      render: ({ tableData }) => <span className=\"idx\">{tableData.id + 1}</span>\r\n    },\r\n    {\r\n      width: '25%',\r\n      field: 'ProjectID',\r\n      title: 'Project ID'\r\n    },\r\n    {\r\n      width: '25%',\r\n      title: 'Days Worked',\r\n      field: 'MaxDifference'\r\n    },\r\n    {\r\n      width: '25%',\r\n      title: 'Employee №1 (ID)',\r\n      field: 'Emp1'\r\n    },\r\n    {\r\n      width: '25%',\r\n      title: 'Employee №2 (ID)',\r\n      field: 'Emp2'\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        data={values}\r\n        tableRef={tableRef}\r\n        options={tableOptions}\r\n        style={classes.table}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Result\r\n","import theme from '../../config/theme/theme'\r\n\r\nexport const downloadStyles = () => ({\r\n  downloadWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    flexGrow: 1,\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      justifyContent: 'start'\r\n    }\r\n  },\r\n  downloadIconText: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    marginBottom: 40,\r\n    '& span': {\r\n      margin: '0 10px',\r\n      fontSize: 16\r\n    },\r\n    '& svg': {\r\n      color: theme.palette.primary.main,\r\n      marginRight: 10\r\n    },\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      marginBottom: 10\r\n    }\r\n  },\r\n  helpText: {\r\n    marginBottom: 40,\r\n    color: theme.palette.secondary.main,\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      marginBottom: 20\r\n    }\r\n  },\r\n  radioWrapper: {\r\n    marginBottom: 40\r\n  },\r\n  copyPasteWrapper: {\r\n    flexGrow: 1,\r\n    paddingBottom: 40,\r\n    '& div': {\r\n      height: '100%'\r\n    }\r\n  },\r\n  input: {\r\n    margin: '0 30px',\r\n    width: 250\r\n  },\r\n  toBottom: {\r\n    marginTop: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  uploadWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 40,\r\n    '& svg': {\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n  csvText: {\r\n    fontSize: 16,\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      marginBottom: 5\r\n    }\r\n  },\r\n  uploadInput: {\r\n    display: 'none'\r\n  },\r\n  fileName: {\r\n    color: theme.palette.primary.main,\r\n    margin: '0 10px'\r\n  },\r\n  uploadIcon: {\r\n    color: theme.palette.primary.main\r\n  },\r\n  labelWrap: {\r\n    '& label': {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      cursor: 'pointer'\r\n    },\r\n    '& span': {\r\n      margin: '0 10px'\r\n    }\r\n  },\r\n  uploadedContainer: {\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      textAlign: 'center'\r\n    }\r\n  }\r\n})\r\n\r\nexport const validationStyles = () => ({\r\n  container: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between'\r\n  },\r\n  validationStyles: {\r\n    display: 'flex',\r\n    fontSize: 16,\r\n    marginBottom: 16,\r\n    '& svg': {\r\n      marginRight: 12\r\n    }\r\n  },\r\n  downloadIconText: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    marginBottom: 40,\r\n    marginTop: 25,\r\n    '& span': {\r\n      margin: '0 10px',\r\n      fontSize: 16\r\n    },\r\n    '& svg': {\r\n      color: theme.palette.primary.main,\r\n      marginRight: 10\r\n    }\r\n  },\r\n  successful: {\r\n    color: '#8BB439'\r\n  },\r\n  failed: {\r\n    color: '#EC4436'\r\n  },\r\n  errorMessage: {\r\n    color: '#D82727'\r\n  },\r\n\r\n  line: {\r\n    marginRight: 9,\r\n    lineHeight: '16px',\r\n    color: theme.palette.primary.border\r\n  },\r\n  row: {\r\n    lineHeight: '16px',\r\n    display: 'flex',\r\n    '&:not(:last-child)': {\r\n      marginBottom: 8\r\n    }\r\n  },\r\n  label: {\r\n    width: 100,\r\n    marginRight: 12,\r\n    color: theme.palette.primary.border\r\n  }\r\n})\r\n","import { createRef, useState, useEffect, useMemo } from 'react'\r\n\r\nimport importFile, { ACCEPT_CSV_ONLY } from '../helpers/importFile'\r\nimport downloadCSV from 'helpers/downloadCSV'\r\nimport ResultSuccessTable from '../components/ResultTable/index'\r\nimport UploadOutlinedIcon from '@mui/icons-material/UploadOutlined'\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\r\nimport { InfoPageStyles } from './styles'\r\nimport DownloadOutlinedIcon from '@mui/icons-material/DownloadOutlined'\r\n\r\nconst Home = () => {\r\n  const [values, setValues] = useState([])\r\n  const [fileName, setfileName] = useState(null)\r\n  const [info, setInfo] = useState('')\r\n  const tableRef = createRef(null)\r\n\r\n  const classes = InfoPageStyles()\r\n\r\n  const csvData = [\r\n    {\r\n      EmpID: 'EmpID',\r\n      ProjectID: 'ProjectID',\r\n      DateFrom: 'DateFrom',\r\n      DateTo: 'DateTo'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values])\r\n\r\n  const uploadFile = ({ payload, info }) => {\r\n    setInfo(info)\r\n    setValues(payload)\r\n  }\r\n\r\n  const handleImportFile = e => {\r\n    setfileName(e.target.files[0].name)\r\n    importFile(e, uploadFile)\r\n  }\r\n\r\n  const handleRemoveFile = () => {\r\n    setValues([])\r\n    setfileName('')\r\n    setInfo('')\r\n  }\r\n\r\n  const downloadCSVFunc = () => {\r\n    downloadCSV(csvData, 'Employee.csv')\r\n  }\r\n\r\n  const loading = false\r\n\r\n  return (\r\n    <>\r\n      <h2 style={classes.mainTitle}>\r\n        {'Pair of employees who have worked together'}\r\n      </h2>\r\n      <div style={classes.imageWrapper}>\r\n        <div style={classes.infoWrapperContainer}></div>\r\n        <div style={classes.actionButtonsWrapper}>\r\n          <div style={classes.uploadWrapper}>\r\n            {fileName?.length ? (\r\n              <div style={classes.uploadedContainer}>\r\n                <span style={classes.csvText}>{'Upload .csv file'}</span>\r\n                <span style={classes.fileName}>{fileName}</span>\r\n                <CloseOutlinedIcon\r\n                  style={classes.CloseIcon}\r\n                  onClick={handleRemoveFile}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div style={classes.labelContainer}>\r\n                <label\r\n                  style={classes.labelWrap}\r\n                  htmlFor=\"contained-button-file\"\r\n                >\r\n                  <span style={classes.downloadIconText}>\r\n                    {'Upload .csv file'}\r\n                  </span>\r\n                  <input\r\n                    style={classes.uploadInput}\r\n                    id=\"contained-button-file\"\r\n                    type=\"file\"\r\n                    accept={ACCEPT_CSV_ONLY}\r\n                    onChange={handleImportFile}\r\n                  />\r\n                  <UploadOutlinedIcon\r\n                    sx={{ fontSize: 40 }}\r\n                    style={classes.uploadIcon}\r\n                  />\r\n                </label>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {values?.length ? (\r\n            <ResultSuccessTable tableRef={tableRef} values={values} />\r\n          ) : (\r\n            <div style={classes.infoWrapperContainer}>\r\n              {info.length > 2 && (\r\n                <div style={classes.infoErrorContainer}>{info}</div>\r\n              )}\r\n              <div style={classes.csvText} onClick={downloadCSVFunc}>\r\n                <DownloadOutlinedIcon\r\n                  style={classes.uploadIcon}\r\n                  sx={{ fontSize: 30 }}\r\n                />\r\n                {'Download Template CSV'}\r\n              </div>\r\n              <p style={classes.csvText}>\r\n                Fill the .csv with employees you would like to add. Don’t change\r\n                the format of the file, please use only .csv format\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Home\r\n","import theme from '../config/theme/theme'\r\n\r\nexport const ProductPageStyles = () => ({\r\n  searchWrapper: {\r\n    display: 'flex',\r\n    width: '30%',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n    margin: '0 auto',\r\n    padding: '20px'\r\n  },\r\n  infoWrapper: {\r\n    margin: '0 4px'\r\n  },\r\n  mainTitle: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n    color: '#f19930',\r\n    fontSize: 50\r\n  },\r\n  errorInfoWrapper: {\r\n    verticalAlign: 'middle'\r\n  }\r\n})\r\n\r\nexport const InfoPageStyles = () => ({\r\n  infoWrapper: {\r\n    margin: '0 4px'\r\n  },\r\n  mainTitle: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n    fontSize: 40,\r\n    color: '#f19930'\r\n  },\r\n  infoWrapperContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  infoErrorContainer: {\r\n    display: 'flex',\r\n    fontSize: '20px',\r\n    padding: '30px',\r\n    color: 'red',\r\n    fontWeight: 600\r\n  },\r\n  downloadWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    flexGrow: 1,\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      justifyContent: 'start'\r\n    }\r\n  },\r\n  downloadIconText: {\r\n    display: 'flex',\r\n    cursor: 'pointer',\r\n    fontFamily: 'Pacifico',\r\n    color: theme.palette.primary.textBrow,\r\n    fontSize: 22,\r\n    '& span': {\r\n      margin: '0 10px',\r\n      fontFamily: 'Pacifico',\r\n      fontSize: 22,\r\n      color: theme.palette.primary.textBrow\r\n    },\r\n    '& svg': {\r\n      color: theme.palette.primary.main,\r\n      marginRight: 10\r\n    },\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      marginBottom: 10\r\n    }\r\n  },\r\n  helpText: {\r\n    marginBottom: 40,\r\n    color: theme.palette.primary.main,\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      marginBottom: 20\r\n    }\r\n  },\r\n  radioWrapper: {\r\n    marginBottom: 40\r\n  },\r\n  copyPasteWrapper: {\r\n    flexGrow: 1,\r\n    paddingBottom: 40,\r\n    '& div': {\r\n      height: '100%'\r\n    }\r\n  },\r\n  input: {\r\n    margin: '0 30px',\r\n    width: 250\r\n  },\r\n  toBottom: {\r\n    marginTop: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  uploadWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 40,\r\n    '& svg': {\r\n      cursor: 'pointer'\r\n    }\r\n  },\r\n  csvText: {\r\n    fontSize: 22,\r\n    display: 'flex',\r\n    fontWeight: 500,\r\n    color: theme.palette.primary.textBrow,\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      marginBottom: 5\r\n    }\r\n  },\r\n  uploadInput: {\r\n    display: 'none'\r\n  },\r\n  fileName: {\r\n    fontSize: 18,\r\n    color: theme.palette.primary.inverse,\r\n    margin: '0 10px'\r\n  },\r\n  uploadIcon: {\r\n    color: theme.palette.primary.inverse\r\n  },\r\n  CloseIcon: {\r\n    color: theme.palette.primary.textBrow\r\n  },\r\n  labelContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: 40,\r\n    marginTop: 30\r\n  },\r\n  labelWrap: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    '& label': {\r\n      display: 'flex',\r\n      cursor: 'pointer'\r\n    },\r\n    '& span': {\r\n      margin: '0 10px'\r\n    }\r\n  },\r\n  uploadedContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    textAlign: 'center',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down(theme.breakpoints.values.xs)]: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      textAlign: 'center'\r\n    }\r\n  }\r\n})\r\n"],"names":["updateProjectMaxDifference","project","dateFrom","dateTo","emp1","emp2","dif","differenceInCalendarDays","MaxDifference","Emp1","Emp2","callback","file","target","files","Promise","resolve","reject","reader","FileReader","readAsText","onload","result","onerror","error","then","res","tableData","info","result1","parse","header","skipEmptyLines","data","reduce","acc","item","proj","ProjectID","DateTo","Date","push","DateFrom","projectList","Object","values","forEach","projectScope","arr","i","length","j","splice","min","EmpID","getProjectInfo","Error","payload","fileName","templateArray","emloyeeArray","map","csvContent","concat","join","replace","pom","document","createElement","blob","Blob","type","url","URL","createObjectURL","href","setAttribute","click","Paper","withStyles","root","margin","background","boxShadow","MuiPaper","defaultOptions","search","actionsColumnIndex","toolbar","draggable","emptyRowsWhenPaging","selectionProps","color","headerSelectionProps","pageSize","pageSizeOptions","actionsCellStyle","fontSize","sorting","Table","className","options","withShadow","components","emptyTableText","props","allOptions","cn","clsx","alignedColumns","columns","localization","body","emptyDataSourceMessage","Container","children","childrenFiltered","filter","el","elevation","defaultProps","hover","tableOptions","paging","classes","container","display","flex","flexDirection","justifyContent","validationStyles","marginBottom","marginRight","downloadIconText","alignItems","cursor","marginTop","theme","successful","failed","errorMessage","line","lineHeight","row","label","width","tableRef","createRef","render","id","field","title","style","table","useState","setValues","setfileName","setInfo","infoWrapper","mainTitle","infoWrapperContainer","infoErrorContainer","padding","fontWeight","downloadWrapper","flexGrow","fontFamily","helpText","radioWrapper","copyPasteWrapper","paddingBottom","height","input","toBottom","uploadWrapper","csvText","uploadInput","uploadIcon","CloseIcon","labelContainer","labelWrap","uploadedContainer","textAlign","csvData","useEffect","uploadFile","imageWrapper","actionButtonsWrapper","CloseOutlined","onClick","htmlFor","accept","onChange","e","name","importFile","UploadOutlined","sx","downloadCSV","DownloadOutlined"],"sourceRoot":""}